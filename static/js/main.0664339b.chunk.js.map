{"version":3,"sources":["RecipeCard.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","root","maxWidth","border","boxShadow","media","height","paddingTop","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","avatar","backgroundColor","green","RecipeCard","title","calories","image","ingredients","classes","React","useState","expanded","setExpanded","Card","className","style","marginTop","CardHeader","Avatar","aria-label","subheader","CardMedia","CardContent","Typography","variant","color","component","CardActions","disableSpacing","IconButton","clsx","onClick","aria-expanded","Collapse","in","timeout","unmountOnExit","map","i","text","App","recipes","setRecipes","search","setSearch","query","setQuery","useEffect","getRecipes","a","fetch","response","json","data","hits","onSubmit","e","preventDefault","type","value","onChange","target","placeholder","Button","size","recip","recipe","label","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yYAiBMA,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,SAAU,IACVC,OAAO,UACPC,UAAW,mCACX,UAAW,CACTA,UAAW,0CAGfC,MAAO,CACLC,OAAQ,EACRC,WAAY,UAEdC,OAAQ,CACNC,UAAW,eACXC,WAAY,OACZC,WAAYX,EAAMY,YAAYC,OAAO,YAAa,CAChDC,SAAUd,EAAMY,YAAYE,SAASC,YAGzCC,WAAY,CACVP,UAAW,kBAEbQ,OAAQ,CACNC,gBAAiBC,IAAM,UAoEZC,EAhEE,SAAC,GAAuC,IAAtCC,EAAqC,EAArCA,MAAMC,EAA+B,EAA/BA,SAASC,EAAsB,EAAtBA,MAAMC,EAAgB,EAAhBA,YAChCC,EAAU3B,IADsC,EAEtB4B,IAAMC,UAAS,GAFO,mBAE/CC,EAF+C,KAErCC,EAFqC,KAQtD,OACE,8BACA,eAACC,EAAA,EAAD,CAAMC,UAAWN,EAAQxB,KAAM+B,MAAO,CAACC,UAAU,GAAGf,gBAAgB,SAApE,UACE,cAACgB,EAAA,EAAD,CACEjB,OACE,cAACkB,EAAA,EAAD,CAAQC,aAAW,SAASL,UAAWN,EAAQR,OAA/C,eAKFI,MAAOA,EACPgB,UAAU,gBAEZ,cAACC,EAAA,EAAD,CACEP,UAAWN,EAAQpB,MACnBkB,MAAOA,EACPF,MAAOA,IAET,cAACkB,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,CAAYC,QAAQ,QAAQC,MAAM,gBAAgBC,UAAU,IAA5D,6BACmBtB,EADnB,0FAEuBC,EAFvB,kBAKF,eAACsB,EAAA,EAAD,CAAaC,gBAAc,EAA3B,UACE,cAACC,EAAA,EAAD,CAAYV,aAAW,mBAAvB,SACE,cAAC,IAAD,MAEF,cAACU,EAAA,EAAD,CACEf,UAAWgB,YAAKtB,EAAQjB,OAAT,eACZiB,EAAQT,WAAaY,IAExBoB,QApCkB,WACxBnB,GAAaD,IAoCPqB,gBAAerB,EACfQ,aAAW,mBANb,SAQE,cAAC,IAAD,SAGJ,cAACc,EAAA,EAAD,CAAUC,GAAIvB,EAAUwB,QAAQ,OAAOC,eAAa,EAApD,SACE,cAACd,EAAA,EAAD,UAEA,6BAEAf,EAAY8B,KAAK,SAACC,GAAD,OACT,6BAAMA,EAAEC,sB,QC7BTC,EAhEL,WAER,IAFY,EAKc9B,mBAAS,IALvB,mBAKN+B,EALM,KAKEC,EALF,OAMYhC,mBAAS,IANrB,mBAMNiC,EANM,KAMCC,EAND,OAOUlC,mBAAS,WAPnB,mBAONmC,EAPM,KAOAC,EAPA,KASZC,qBAAU,WACRC,MACA,CAACH,IAEH,IAAMG,EAAU,uCAAG,8BAAAC,EAAA,sEACIC,MAAM,mCAAD,OACSL,EADT,mBAZf,WAYe,oBAXd,qCAUK,cACXM,EADW,gBAICA,EAASC,OAJV,OAIXC,EAJW,OAKjBX,EAAWW,EAAKC,MALC,2CAAH,qDAmBhB,OACE,sBAAKxC,UAAU,MAAf,UACE,qBAAKA,UAAU,SAAf,SACD,uBAAMyC,SATQ,SAACC,GAEhBA,EAAEC,iBACFX,EAASH,GACTC,EAAU,KAKkB9B,UAAU,cAArC,UACC,uBACC4C,KAAK,OACL5C,UAAU,aACV6C,MAAOhB,EACPiB,SAlBe,SAACJ,GACnBZ,EAAUY,EAAEK,OAAOF,QAkBhBG,YAAY,0BACb,cAACC,EAAA,EAAD,CAAQL,KAAK,SAAS5C,UAAU,gBAAgBU,QAAQ,YAAYC,MAAM,YAC1EuC,KAAK,SAASjD,MAAO,CAACtB,WAAW,OADjC,2BAID,qBAAKqB,UAAU,UAAf,SACC2B,EAAQJ,KAAI,SAAA4B,GAAK,OAEhB,cAAC,EAAD,CAEC7D,MAAO6D,EAAMC,OAAOC,MACpB9D,SAAU4D,EAAMC,OAAO7D,SACvBC,MAAO2D,EAAMC,OAAO5D,MACpBC,YAAa0D,EAAMC,OAAO3D,aAJrB0D,EAAMC,OAAOC,gBC3CXC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.0664339b.chunk.js","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Collapse from '@material-ui/core/Collapse';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport { green, red } from '@material-ui/core/colors';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    maxWidth: 540,\n    border:\"primary\",\n    boxShadow: \"0 8px 40px -12px rgba(0,0,0,0.3)\",\n    \"&:hover\": {\n      boxShadow: \"0 24px 80px -13.125px rgba(0,0,0,0.8)\"\n    }\n  },\n  media: {\n    height: 0,\n    paddingTop: '56.25%', // 16:9\n  },\n  expand: {\n    transform: 'rotate(0deg)',\n    marginLeft: 'auto',\n    transition: theme.transitions.create('transform', {\n      duration: theme.transitions.duration.shortest,\n    }),\n  },\n  expandOpen: {\n    transform: 'rotate(180deg)',\n  },\n  avatar: {\n    backgroundColor: green[500],\n  },\n}));\n\nconst RecipeCard=({title,calories,image,ingredients})=> {\n  const classes = useStyles();\n  const [expanded, setExpanded] = React.useState(false);\n\n  const handleExpandClick = () => {\n    setExpanded(!expanded);\n  };\n\n  return (\n    <div >\n    <Card className={classes.root} style={{marginTop:15,backgroundColor:'white'}} >\n      <CardHeader\n        avatar={\n          <Avatar aria-label=\"Recipe\" className={classes.avatar}>\n            R\n          </Avatar>\n        }\n       \n        title={title}\n        subheader=\"Food Dishes\"\n      />\n      <CardMedia\n        className={classes.media}\n        image={image}\n        title={title}\n      />\n      <CardContent>\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n          This impressive {title} is a perfect party dish and a fun meal to cook together with your\n          guests. It contains {calories} calories.\n        </Typography>\n      </CardContent>\n      <CardActions disableSpacing>\n        <IconButton aria-label=\"add to favorites\">\n          <FavoriteIcon />\n        </IconButton>\n        <IconButton\n          className={clsx(classes.expand, {\n            [classes.expandOpen]: expanded,\n          })}\n          onClick={handleExpandClick}\n          aria-expanded={expanded}\n          aria-label=\"Show Ingredients\"\n        >\n          <ExpandMoreIcon />\n        </IconButton>\n      </CardActions>\n      <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n        <CardContent>\n          \n        <ul>\n        {\n        ingredients.map( (i) => (\n                <li >{i.text}</li>\n        ))\n            }\n      </ul>\n        </CardContent>\n      </Collapse>\n    </Card>\n    </div>\n  );\n}\n\nexport default RecipeCard;","import React, {useEffect,useState}  from 'react';\nimport './App.css';\nimport RecipeCard from './RecipeCard';\nimport Recipe from './Recipe';\nimport { Button, Grid } from '@material-ui/core';\nconst App=()=>{\n\n  const APP_ID='56a043aa';\n  const APP_KEY='c0147a470c5283382da3966f2c78a29b';\n \n  const[recipes,setRecipes]=useState([]);\n  const[search,setSearch]=useState(\"\");\n  const[query,setQuery]=useState('chicken');\n \n  useEffect(()=>{\n    getRecipes();\n  },[query]);\n  \n  const getRecipes = async () => {\n    const response=await fetch(\n    `https://api.edamam.com/search?q=${query}&app_id=${APP_ID}&app_key=${APP_KEY}`\n    );\n    const data= await response.json();\n    setRecipes(data.hits);\n    \n  };\n\n  const UpdateSearch= (e) =>{\n    setSearch(e.target.value);\n  }\n\n  const GetSearch= (e) =>{\n    \n    e.preventDefault();\n    setQuery(search);\n    setSearch(\"\");\n  };\n  return(\n    <div className=\"App\">\n      <div className=\"Navbar\">\n     <form onSubmit={GetSearch} className=\"search-form\">\n      <input\n       type=\"text\" \n       className=\"search-bar\" \n       value={search} \n       onChange={UpdateSearch}\n       placeholder=\"Search your food here\"/>\n      <Button type=\"submit\" className=\"search-button\" variant=\"contained\" color=\"secondary\"\n      size=\"medium\" style={{marginLeft:\"5px\"}}> Search </Button>\n     </form>\n     </div>\n     <div className=\"recipes\">\n     {recipes.map(recip=>(\n       \n       <RecipeCard \n        key={recip.recipe.label}\n        title={recip.recipe.label}\n        calories={recip.recipe.calories}\n        image={recip.recipe.image}  \n        ingredients={recip.recipe.ingredients}\n       />\n     ))\n     }\n     </div>\n     \n     </div>\n    \n  )\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}